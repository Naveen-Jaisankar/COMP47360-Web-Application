type Query {
    # fetch induction quiz score for a user on a specific date
    getExposureScore(userId: Long!, exposureDate: String!): ExposureScore
    
    # fetch St George Quiz score for a user on a specific date
    getStGeorgeQuizScore(userId: Long!, quizDate: String!): StGeorgeQuizScore
    
    # fetch Daily Quiz score for a user on a specific date
    getDailyQuizScore(userId: Long!, quizDate: String!): DailyQuizScore
}

type Mutation {
    # update or enter exposure score for a user on a specific date
    updateExposureScore(userId: Long!, exposureDate: String!, exposureScore: Int!): ExposureScore
    
    # update or enter St George Quiz score for a user on a specific date
    updateStGeorgeQuizScore(userId: Long!, quizDate: String!, quizScore: Int!): StGeorgeQuizScore
    
    # update or enter Daily Quiz score for a user on a specific date
    updateDailyQuizScore(userId: Long!, quizDate: String!, quizScore: Int!): DailyQuizScore
}

type ExposureScore {
    id: Long
    userId: Long
    exposureDate: String
    exposureScore: Int
}

type StGeorgeQuizScore {
    id: Long
    userId: Long
    quizDate: String
    quizScore: Int
}

type DailyQuizScore {
    id: Long
    userId: Long
    quizDate: String
    quizScore: Int
}
